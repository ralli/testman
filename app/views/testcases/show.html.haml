- title t('testcases.show.title')
- content_for :head do
  :css
    .top_margin {
      margin-top: 1em;
      margin-bottom: 0px;
    }

    .handle {
      cursor: move;
      font-size: 0.8em;
      color: #888888;
      vertical-align: top;
    }

    ol#attachments {
      list-style: none;
      margin: 0px;
      padding: 0px;
    }

    .dragClass {
      background-color: #cccccc;
    }

    tbody tr:nth-child(even) td {
      background-color: transparent;
    }

    li.tag_entry {
      list-style: none;
      float: left;
      background-color: #cccccc;
      border-color: #aaaaaa;
      border-width: 1px;
      border-style: solid;
      padding: 2px 4px;
      margin-right: 4px;
      -moz-border-radius: 4px;
      -o-border-radius: 4px;
      border-radius: 4px;
      -webkit-border-radius: 4px;
    }

  :javascript
    $(function() {
      $('#attachments').sortable({
        axis: 'y',
        dropOnEmpty: false,
        handle: '.handle',
        cursor: 'move',
        items: 'li',
        opacity: 0.4,
        scroll: true,
        update: function(){
          $.ajax({
            type: 'post',
            data: $('#attachments').sortable("serialize"),
            dataType: 'script',
            complete: function(request){
              $('#attachments').effect('highlight');
            },
            url: '#{sort_attachments_testcase_url(@testcase)}' })
        }
      });

      $('#teststeps').tableDnD( {
        onDragClass: 'dragClass',
        dragHandle: 'handle',
        onDrop: function(table, row) {
          $.ajax({
            type: 'post',
            data: $.tableDnD.serialize(),
            dataType: 'script',
            complete: function(request){
              $('#teststeps').effect('highlight');
            },
            url: '#{sort_teststeps_testcase_url(@testcase)}'
          });
        }
      })
    })

%fieldset.span-24.last
  %legend= t('testcases.show.testcase')
  .span-22.last{:style => "padding: 1em;"}
    .row.span-22.last
      .label.span-4= t('simple_form.labels.testcase.key')
      .span-7= @testcase.key
      .label.span-4= t('simple_form.labels.testcase.version')
      .span-7.last= @testcase.version
    .row.span-22.last
      .label.span-4= t('simple_form.labels.testcase.project')
      .span-18.last= @testcase.project.try(:to_label)
    .row.span-22.last
      .label.span-4= t('simple_form.labels.testcase.name')
      .span-18.last= @testcase.name
    .row
      .label.span-4= t('simple_form.labels.testcase.description')
      .span-18.last= render_textile(@testcase.description)
    .row.span-22.last
      .label.span-4= t('simple_form.labels.testcase.test_area')
      .span-7= value_for(@testcase, :test_area)
      .label.span-4= t('simple_form.labels.testcase.test_variety')
      .span-7.last= value_for(@testcase, :test_variety)
    .row.span-22.last
      .label.span-4= t('simple_form.labels.testcase.test_level')
      .span-7= value_for(@testcase, :test_level)
      .label.span-4= t('simple_form.labels.testcase.execution_type')
      .span-7.last= value_for(@testcase, :execution_type)
    .row.span-22.last
      .label.span-4= t('simple_form.labels.testcase.test_status')
      .span-7= value_for(@testcase, :test_status)
      .label.span-4= t('simple_form.labels.testcase.test_priority')
      .span-7.last= value_for(@testcase, :test_priority)
    .row.span-22.last
      .label.span-4= t('simple_form.labels.testcase.test_method')
      .span-7.last= value_for(@testcase, :test_method)
    .row.span-22.last
      .label.span-4= t('simple_form.labels.testcase.created_at')
      .span-7= @testcase.created_at
      .label.span-4= t('simple_form.labels.testcase.updated_at')
      .span-7.last= @testcase.updated_at
    .row.span-22.last
      .label.span-4= t('simple_form.labels.testcase.created_by')
      .span-7= @testcase.created_by.try(:to_label)
      .label.span-4= t('simple_form.labels.testcase.updated_by')
      .span-7.last= @testcase.edited_by.try(:to_label)
    .row.span-22.last
      .label.span-4= t('simple_form.labels.testcase.tag_list')
      .span-18.last
        %ul{:style => "margin: 0px; padding: 0px;"}
          - @testcase.tag_list.each do |tag|
            %li.tag_entry
              = tag
    .row.span-22.last
      %ul.prepend-4.span-18.link_list.top_margin.last
        - if permitted_to? :update, @testcase
          %li= link_to(t('helpers.edit'), edit_testcase_path(@testcase), :id => 'edit', :class => 'button')
        - if permitted_to? :delete, @testcase
          %li= link_to(t('helpers.destroy'), @testcase, :confirm => t('helpers.confirm'), :method => :delete, :id => 'delete', :class => 'button')
        - if permitted_to? :create, @testcase
          %li= link_to(t('testcases.show.create_version'), create_version_testcase_path(@testcase), :id => 'create_version', :method => 'put', :class => 'button')
        %li= link_to(t('testcases.show.go_back'), testcases_path, :id => 'view_all', :class => 'button')

%fieldset.span-24.last
  %legend= t('testcases.show.attachments')
  .span-22.last.fieldset
    %ul.link_list.span-22.last{:style => "margin: 0px 0px 1em 0px; padding: 0px"}
      %li= link_to t('testcases.show.add_attachment'), new_testcase_attachment_url(@testcase), :class => 'button_add', :id => 'add_attachment' if permitted_to? 'update', @testcase
    %ol#attachments
      - @testcase.testcase_attachments.each do |attachment|
        %li.span-22.last{:id => "attachment_#{attachment.to_param}"}
          .handle.span-2= t('helpers.drag')
          .span-8
            = link_to attachment.attachment_file_name, attachment.attachment.url
          .span-4
            = attachment.attachment_file_size.bytes
            Bytes
          .span-4.last
            = link_to t('helpers.destroy'), testcase_attachment_url(@testcase, attachment), :confirm => t('helpers.confirm'), :method => 'delete'

= render :partial => "test_steps"

